generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Kabupaten {
  id             Int              @id @default(autoincrement())
  nama_kabupaten String           
  jumlah_desa    Int
  periode_awal   DateTime
  periode_akhir  DateTime
  ketua_forum    String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  User           User[]
  KelompokDesa   KelompokDesa[]
}

model KelompokDesa {
  id                      Int         @id @default(autoincrement())
  nama                    String
  kabupaten_kota          String  
  kecamatan               String
  kelurahan               String
  kabupatenNama           String?
  kecamatanNama           String?
  kelurahanNama           String
  tanggal_pembentukan     DateTime
  jumlah_dana_sekarang    Int
  jumlah_anggota_awal     Int
  jumlah_anggota_sekarang Int
  kategori                String
  jumlah_hibah_diterima   Int
  status                  String?
  catatan                 String?
  latitude                Float?
  longitude               Float?
  kabupatenId             Int?
  createdAt               DateTime    @default(now())
  updatedAt               DateTime    @updatedAt
  Kabupaten               Kabupaten?  @relation(fields: [kabupatenId], references: [id], onDelete: Cascade)

  Galeri                  Galeri[]
  Notulensi               Notulensi[]
  Pengurus                Pengurus[]
  Produk                  Produk[]

  @@index([kabupatenId], name: "KelompokDesa_kabupatenId_idx")
}

model Galeri {
  id                Int      @id @default(autoincrement())
  gambar            String
  kelompokId        Int
  createdAt         DateTime @default(now())
  KelompokDesa      KelompokDesa @relation(fields: [kelompokId], references: [id], onDelete: Cascade)

  @@index([kelompokId], name: "Galeri_kelompokId_idx")
}

model Notulensi {
  id                Int      @id @default(autoincrement())
  file              String
  catatan           String
  kelompokId        Int
  createdAt         DateTime @default(now())
  KelompokDesa      KelompokDesa @relation(fields: [kelompokId], references: [id], onDelete: Cascade)

  @@index([kelompokId], name: "Notulensi_kelompokId_idx")
}

model Pengurus {
  id              Int      @id @default(autoincrement())
  nama            String
  foto            String?
  jabatan         String
  nohp            String?
  kelompokId      Int
  createdAt       DateTime @default(now())
  KelompokDesa    KelompokDesa @relation(fields: [kelompokId], references: [id], onDelete: Cascade)

  @@index([kelompokId], name: "Pengurus_kelompokId_idx")
}

model Produk {
  id              Int      @id @default(autoincrement())
  nama            String
  harga_awal       Int
  harga_akhir      Int
  foto            String
  deskripsi       String
  pelaku_usaha     String   @default("Tidak Diketahui")
  nohp            String   @default("")
  kelompokId      Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  KelompokDesa    KelompokDesa @relation(fields: [kelompokId], references: [id], onDelete: Cascade)

  @@index([kelompokId], name: "Produk_kelompokId_idx")
}

model User {
  id          Int        @id @default(autoincrement())
  name        String
  email       String     @unique
  password    String
  role        String
  nip         String?
  kabupatenId Int?
  Kabupaten   Kabupaten? @relation(fields: [kabupatenId], references: [id])
  sendEmail   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}